qpois.ham$avg_1[i] <- qpois(0.6, sales$demand.ham.avg_1[i],lower.tail = T)
}
qpois.ham$profit.actual <- ifelse(sales$demand.ham >= sales$available.ham,
((sales$available.ham * 6.50) -
(sales$available.ham * 3.50)),
(sales$demand.ham * 6.50) -
(sales$available.ham * 3.50))
qpois.ham$avg.pro <- ifelse(qpois.ham$demand.ham >= qpois.ham$avg.ham,
((qpois.ham$avg.ham * 6.50) -
(qpois.ham$avg.ham * 3.50)),
(qpois$demand.ham * 6.50) -
(qpois$avg.ham * 3.50))
qpois.ham$avg_1.pro <- ifelse(qpois.ham$demand.ham >= qpois.ham$avg_1.ham,
((qpois.ham$avg_1.ham * 6.50) -
(qpois.ham$avg_1.ham * 3.50)),
(qpois$demand.ham * 6.50) -
(qpois$avg_1.ham * 3.50))
ifelse(qpois.ham$demand.ham >= qpois.ham$avg.ham,
((qpois.ham$avg.ham * 6.50) -
(qpois.ham$avg.ham * 3.50)),
(qpois$demand.ham * 6.50) -
(qpois$avg.ham * 3.50))
qpois.ham
qpois.ham$avg.pro <- ifelse(sales$demand.ham >= qpois.ham$avg.ham,
((qpois.ham$avg.ham * 6.50) -
(qpois.ham$avg.ham * 3.50)),
(sales$demand.ham * 6.50) -
(qpois$avg.ham * 3.50))
qpois.ham$avg[1] <- 14
qpois.ham$avg_1[1] <- 14
qpois.ham$avg.pro <- ifelse(sales$demand.ham >= qpois.ham$avg.ham,
((qpois.ham$avg.ham * 6.50) -
(qpois.ham$avg.ham * 3.50)),
(sales$demand.ham * 6.50) -
(qpois$avg.ham * 3.50))
qpois.ham
qpois.ham$avg_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg),(6.5 * qpois.ham$avg) - (3.5 * qpois.ham$avg),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg)
)
qpois.ham
qpois.ham$avg_1_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg_1),
(6.5 * qpois.ham$avg_1) - (3.5 * qpois.ham$avg_1),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg_1))
fix(qpois.ham)
summary(qpois)
summary(qpois.ham)
sum(qpois.ham$profit.actual,qpois.ham$avg_pro,qpois.ham$avg_1_pro)
sum(qpois.ham$profit.actual)
sum(qpois.ham$avg_pro)
sum(qpois.ham$avg_1_pro)
j <- 0
sales$demand.ham.avg <- sales$availability.ham
for(i in 2:nrow(sales))
{
if(sales$demand.ham[i] == 0)
{
j <- (j+1)
}
sales$demand.ham.avg[i] <- sum(sales$demand.ham[1:i-1])/(i - 1 - j)
sales$demand.ham.avg_1[i] <- ((sales$demand.ham.avg[i] * 0.70) + (sales$demand.ham[i-1] * 0.30))
qpois.ham$avg[i] <- qpois(0.5, sales$demand.ham.avg[i],lower.tail = T)
qpois.ham$avg_1[i] <- qpois(0.5, sales$demand.ham.avg_1[i],lower.tail = T)
}
#qpois.ham <- data.frame(sales$demand.ham,sales$available.ham)
qpois.ham$avg[1] <- 14
qpois.ham$avg_1[1] <- 14
qpois.ham$profit.actual <- ifelse(sales$demand.ham >= sales$available.ham,
((sales$available.ham * 6.50) -
(sales$available.ham * 3.50)),
(sales$demand.ham * 6.50) -
(sales$available.ham * 3.50))
qpois.ham$avg_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg),(6.5 * qpois.ham$avg) - (3.5 * qpois.ham$avg),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg))
qpois.ham$avg_1_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg_1),
(6.5 * qpois.ham$avg_1) - (3.5 * qpois.ham$avg_1),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg_1))
sum(qpois.ham$profit.actual)
sum(qpois.ham$avg_pro)
sum(qpois.ham$avg_1_pro)
j <- 0
sales$demand.ham.avg <- sales$availability.ham
for(i in 2:nrow(sales))
{
if(sales$demand.ham[i] == 0)
{
j <- (j+1)
}
sales$demand.ham.avg[i] <- sum(sales$demand.ham[1:i-1])/(i - 1 - j)
sales$demand.ham.avg_1[i] <- ((sales$demand.ham.avg[i] * 0.60) + (sales$demand.ham[i-1] * 0.40))
qpois.ham$avg[i] <- qpois(0.5, sales$demand.ham.avg[i],lower.tail = T)
qpois.ham$avg_1[i] <- qpois(0.5, sales$demand.ham.avg_1[i],lower.tail = T)
}
#qpois.ham <- data.frame(sales$demand.ham,sales$available.ham)
qpois.ham$avg[1] <- 14
qpois.ham$avg_1[1] <- 14
qpois.ham$profit.actual <- ifelse(sales$demand.ham >= sales$available.ham,
((sales$available.ham * 6.50) -
(sales$available.ham * 3.50)),
(sales$demand.ham * 6.50) -
(sales$available.ham * 3.50))
qpois.ham$avg_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg),(6.5 * qpois.ham$avg) - (3.5 * qpois.ham$avg),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg))
qpois.ham$avg_1_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg_1),
(6.5 * qpois.ham$avg_1) - (3.5 * qpois.ham$avg_1),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg_1))
sum(qpois.ham$avg_1_pro)
sum(qpois.ham$avg_pro)
j <- 0
sales$demand.ham.avg <- sales$availability.ham
for(i in 2:nrow(sales))
{
if(sales$demand.ham[i] == 0)
{
j <- (j+1)
}
sales$demand.ham.avg[i] <- sum(sales$demand.ham[1:i-1])/(i - 1 - j)
sales$demand.ham.avg_1[i] <- ((sales$demand.ham.avg[i] * 0.60) + (sales$demand.ham[i-1] * 0.40))
qpois.ham$avg[i] <- qpois(0.6, sales$demand.ham.avg[i],lower.tail = T)
qpois.ham$avg_1[i] <- qpois(0.6, sales$demand.ham.avg_1[i],lower.tail = T)
}
#qpois.ham <- data.frame(sales$demand.ham,sales$available.ham)
qpois.ham$avg[1] <- 14
qpois.ham$avg_1[1] <- 14
qpois.ham$profit.actual <- ifelse(sales$demand.ham >= sales$available.ham,
((sales$available.ham * 6.50) -
(sales$available.ham * 3.50)),
(sales$demand.ham * 6.50) -
(sales$available.ham * 3.50))
qpois.ham$avg_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg),(6.5 * qpois.ham$avg) - (3.5 * qpois.ham$avg),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg))
qpois.ham$avg_1_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg_1),
(6.5 * qpois.ham$avg_1) - (3.5 * qpois.ham$avg_1),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg_1))
sum(qpois.ham$avg_pro)
j <- 0
sales$demand.ham.avg <- sales$availability.ham
for(i in 2:nrow(sales))
{
if(sales$demand.ham[i] == 0)
{
j <- (j+1)
}
sales$demand.ham.avg[i] <- sum(sales$demand.ham[1:i-1])/(i - 1 - j)
sales$demand.ham.avg_1[i] <- ((sales$demand.ham.avg[i] * 0.60) + (sales$demand.ham[i-1] * 0.40))
qpois.ham$avg[i] <- qpois(0.5, sales$demand.ham.avg[i],lower.tail = T)
qpois.ham$avg_1[i] <- qpois(0.5, sales$demand.ham.avg_1[i],lower.tail = T)
}
#qpois.ham <- data.frame(sales$demand.ham,sales$available.ham)
qpois.ham$avg[1] <- 14
qpois.ham$avg_1[1] <- 14
qpois.ham$profit.actual <- ifelse(sales$demand.ham >= sales$available.ham,
((sales$available.ham * 6.50) -
(sales$available.ham * 3.50)),
(sales$demand.ham * 6.50) -
(sales$available.ham * 3.50))
qpois.ham$avg_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg),(6.5 * qpois.ham$avg) - (3.5 * qpois.ham$avg),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg))
qpois.ham$avg_1_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg_1),
(6.5 * qpois.ham$avg_1) - (3.5 * qpois.ham$avg_1),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg_1))
sum(qpois.ham$avg_pro)
j <- 0
sales$demand.ham.avg <- sales$availability.ham
for(i in 2:nrow(sales))
{
#  if(sales$demand.ham[i] == 0)
#    {
#    j <- (j+1)
#
#   }
sales$demand.ham.avg[i] <- sum(sales$demand.ham[1:i-1])/(i - 1 - j)
sales$demand.ham.avg_1[i] <- ((sales$demand.ham.avg[i] * 0.60) + (sales$demand.ham[i-1] * 0.40))
qpois.ham$avg[i] <- qpois(0.5, sales$demand.ham.avg[i],lower.tail = T)
qpois.ham$avg_1[i] <- qpois(0.5, sales$demand.ham.avg_1[i],lower.tail = T)
}
#qpois.ham <- data.frame(sales$demand.ham,sales$available.ham)
qpois.ham$avg[1] <- 14
qpois.ham$avg_1[1] <- 14
qpois.ham$profit.actual <- ifelse(sales$demand.ham >= sales$available.ham,
((sales$available.ham * 6.50) -
(sales$available.ham * 3.50)),
(sales$demand.ham * 6.50) -
(sales$available.ham * 3.50))
qpois.ham$avg_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg),(6.5 * qpois.ham$avg) - (3.5 * qpois.ham$avg),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg))
qpois.ham$avg_1_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg_1),
(6.5 * qpois.ham$avg_1) - (3.5 * qpois.ham$avg_1),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg_1))
sum(qpois.ham$avg_pro)
sum(qpois.ham$avg_pro)
j <- 0
sales$demand.ham.avg <- sales$availability.ham
for(i in 2:nrow(sales))
{
#  if(sales$demand.ham[i] == 0)
#    {
#    j <- (j+1)
#
#   }
sales$demand.ham.avg[i] <- sum(sales$demand.ham[1:i-1])/(i - 1 - j)
sales$demand.ham.avg_1[i] <- ((sales$demand.ham.avg[i] * 0.60) + (sales$demand.ham[i-1] * 0.40))
qpois.ham$avg[i] <- qpois(0.5, sales$demand.ham.avg[i],lower.tail = F)
qpois.ham$avg_1[i] <- qpois(0.5, sales$demand.ham.avg_1[i],lower.tail = F)
}
#qpois.ham <- data.frame(sales$demand.ham,sales$available.ham)
qpois.ham$avg[1] <- 14
qpois.ham$avg_1[1] <- 14
qpois.ham$profit.actual <- ifelse(sales$demand.ham >= sales$available.ham,
((sales$available.ham * 6.50) -
(sales$available.ham * 3.50)),
(sales$demand.ham * 6.50) -
(sales$available.ham * 3.50))
qpois.ham$avg_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg),(6.5 * qpois.ham$avg) - (3.5 * qpois.ham$avg),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg))
qpois.ham$avg_1_pro <- ifelse((qpois.ham$sales.demand.ham >= qpois.ham$avg_1),
(6.5 * qpois.ham$avg_1) - (3.5 * qpois.ham$avg_1),
(6.5 * qpois.ham$sales.demand.ham) - (3.5 * qpois.ham$avg_1))
sum(qpois.ham$avg_pro)
install.packages("RODBC")
library("RODBC")
myconn <- odbcConnect("localhost", uid="postgres",pwd="PEPSI@cola27")
library("RODBC")
myconn <- odbcConnect("localhost", uid="postgres",pwd="PEPSI@cola27")
library(RODBC)
myconn <- odbcConnect("localhost", uid="postgres",pwd="PEPSI@cola27")
myconn <- odbcConnect(drv,"localhost", uid="postgres",pwd="PEPSI@cola27")
myconn <- odbcConnect("localhost", uid="postgres",pwd="PEPSI@cola27")
myconn <- odbcDriverConnect("localhost", uid="postgres",pwd="PEPSI@cola27")
myconn <- odbcDriverConnect("localhost", UID="postgres",PWD="PEPSI@cola27")
myconn <- odbcDriverConnect(DSN="localhost", UID="postgres",PWD="PEPSI@cola27")
drv <- dbDriver("PostgreSQL")
myconn <- odbcDriverConnect(DSN="localhost", UID="postgres",PWD="PEPSI@cola27")
myconn <- odbcDriverConnect(drv,DSN="localhost", UID="postgres",PWD="PEPSI@cola27")
library("RPostgreSQL")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="flights",host="localhost",port=5432,user="postgres",password="XXXX")
library("sqldf")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="flights",host="localhost",port=5432,user="postgres",password="XXXX")
library("RPostgreSQL")
library("sqldf")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="flights",host="localhost",port=5432,user="postgres",password="PEPSI@cola27")
library("RPostgreSQL")
library("sqldf")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="flights",host="localhost",port=5432,user="postgres",password="PEPSI@cola27")
rs <- dbSendQuery(con, "
SELECT * FROM
(
SELECT
A.ORIGIN AIRPORT_OF_ORIGIN,
A.CARRIER CARRIER,
C.TEMP TEMPERATURE,
A.DEP_DELAY DEPARTURE_DELAY,
A.ARR_DELAY ARRIVAL_DELAY,
A.AIR_TIME AIR_TIME,
B.SEATS SEATING_CAPACITY,
TO_DATE(TO_CHAR(A.YEAR,'9999')||'-'||
LTRIM(TO_CHAR(A.MONTH,'99'))
||'-'||
LTRIM(TO_CHAR(A.DAY,'99')),'YYYY-MM-DD') AS DEP_DATE
FROM FLIGHTS A, PLANES B, WEATHER C
WHERE A.DEST = 'LAX'
AND A.TAILNUM = B.TAILNUM
AND A.YEAR = C.YEAR
AND A.MONTH = C.MONTH
AND A.DAY = C.DAY
AND A.HOUR = C.HOUR
) AS TAB
WHERE DEP_DATE BETWEEN '2/23/2013' AND '3/1/2013'
"
)
NY_to_LA_Flights<- fetch(rs,n=-1)
NY_to_LA_Flights
install.packages("RPostgreSQL")
install.packages("sqldf")
rs <- dbSendQuery(con, "
SELECT * FROM
(
SELECT
A.ORIGIN AIRPORT_OF_ORIGIN,
A.CARRIER CARRIER,
C.TEMP TEMPERATURE,
A.DEP_DELAY DEPARTURE_DELAY,
A.ARR_DELAY ARRIVAL_DELAY,
A.AIR_TIME AIR_TIME,
B.SEATS SEATING_CAPACITY,
TO_DATE(TO_CHAR(A.YEAR,'9999')||'-'||
LTRIM(TO_CHAR(A.MONTH,'99'))
||'-'||
LTRIM(TO_CHAR(A.DAY,'99')),'YYYY-MM-DD') AS DEP_DATE
FROM FLIGHTS A, PLANES B, WEATHER C
WHERE A.DEST = 'LAX'
AND A.TAILNUM = B.TAILNUM
AND A.YEAR = C.YEAR
AND A.MONTH = C.MONTH
AND A.DAY = C.DAY
AND A.HOUR = C.HOUR
) AS TAB
WHERE DEP_DATE BETWEEN '2/23/2013' AND '3/1/2013'
"
)
class(rs)
class(drv)
summary(NY_to_LA_Flights)
head(NY_to_LA_Flights)
tail(NY_to_LA_Flights)
nrow(NY_to_LA_Flights)
dbDisconnect(con)
NY_to_LA_Flights<- fetch(rs,n=-1)
dbDisconnect(con)
summary(NY_to_LA_Flights)
names(NY_to_LA_Flights)
NY_to_LA_Flights$dep_date <- NULL
names(NY_to_LA_Flights)
NY_to_LA_Flights
print(NY_to_LA_Flights)
#You have to include the following packages, in order to connect to POSTGRESQL Database
#library("RPostgreSQL")
#library("sqldf")
#If the packages "RPostgreSQL" and "sqldf" are not available, please install using the following commands
#install.packages("RPostgreSQL")
#install.packages("sqldf")
#Including the required packages
library("RPostgreSQL")
library("sqldf")
#Creating db driver object ...
drv <- dbDriver("PostgreSQL")
#Creating a connection object...
con <- dbConnect(drv, dbname="flights",host="localhost",port=5432,user="postgres",password="PEPSI@cola27")
#Executing the query. The query's results are collected to a cursor object or results set object
rs <- dbSendQuery(con, "
SELECT * FROM
(
SELECT
A.ORIGIN AIRPORT_OF_ORIGIN,
A.CARRIER CARRIER,
C.TEMP TEMPERATURE,
A.DEP_DELAY DEPARTURE_DELAY,
A.ARR_DELAY ARRIVAL_DELAY,
A.AIR_TIME AIR_TIME,
B.SEATS SEATING_CAPACITY,
TO_DATE(TO_CHAR(A.YEAR,'9999')||'-'||
LTRIM(TO_CHAR(A.MONTH,'99'))
||'-'||
LTRIM(TO_CHAR(A.DAY,'99')),'YYYY-MM-DD') AS DEP_DATE
FROM FLIGHTS A, PLANES B, WEATHER C
WHERE A.DEST = 'LAX'
AND A.TAILNUM = B.TAILNUM
AND A.YEAR = C.YEAR
AND A.MONTH = C.MONTH
AND A.DAY = C.DAY
AND A.HOUR = C.HOUR
) AS TAB
WHERE DEP_DATE BETWEEN '2/23/2013' AND '3/1/2013'
"
)
#Collecting the results to a data.frame "NY_to_LA_Flights".
NY_to_LA_Flights<- fetch(rs,n=-1)
#Disconnecting the database connection
dbDisconnect(con)
#To display all the data.frame contents, you may just list the data.frame name or use the "print"command
NY_to_LA_Flights
#or use the print command as shown below
print(NY_to_LA_Flights)
#The summary command will give the details of various columns/variables available in the data frame.
#For numeric variables, it shows the details like Mean, 25th percentile, 75th percentile, Min, Max, Median.
summary(NY_to_LA_Flights)
#The head command will display the top rows (only some rows) of the data.frame
head(NY_to_LA_Flights)
#The tail command will display the bottom rows (only some rows) of the data.frame
tail(NY_to_LA_Flights)
#To display the number of rows of data frame, use "nrow" command
nrow(NY_to_LA_Flights)
#The names command will display the names of the variables in the data frame.
names(NY_to_LA_Flights)
#If you want to eliminate a column from the data frame, use NULL, as shown below.
#For example, in the data frame we created "NY_to_LA_Flights", we included a column called
#dep_date, but this column was not asked in the question/assignment. So we can delete this column as shown below:
NY_to_LA_Flights$dep_date <- NULL
#Let us display the names again, to verify if the dep_date variable was deleted.
names(NY_to_LA_Flights)
rbinom(1,10,0.4)
rbinom(1,6,1/6)
?rbinom
rbinom(1,6,1/6)
rbinom(1,6,1/6)
rbinom(1,6,1/6)
rbinom(1,6,1/6)
rbinom(1,6,1/6)
rbinom(1,6,1/6)
rbinom(1,6,1/6)
rbinom(1,6,1/6)
sample(1:6,1,prob=c(rep(1/6,6)))
rbinom(6,1,1/6)
rbinom(6,2,1/6)
rbinom(6,3,1/6)
rbinom(100,1,1/3)
mean(rbinom(100,1,1/3))
mean(rbinom(100,1,1/3))
(rbinom(100,1,1/6))
(rbinom(100,1,1/6)) == (rbinom(100,1,1/2))
sum((rbinom(100,1,1/6)) == (rbinom(100,1,1/2)))
sum((rbinom(1000,1,1/6)) == (rbinom(100,1,1/2)))
sum((rbinom(1000,1,1/6)) == (rbinom(1000,1,1/2)))
sum((rbinom(10000,1,1/6)) == (rbinom(10000,1,1/2)))
sum((rbinom(100000,1,1/6)) == (rbinom(100000,1,1/2)))
sum((rbinom(1000000,1,1/6)) == (rbinom(1000000,1,1/2)))
dbinom(4,1:6,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(4,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,1,1/6)
dbinom(2,2,1/6)
dbinom(2,2,1/6)
dbinom(2,2,1/6)
dbinom(2,2,1/6)
dbinom(2,2,1/6)
1/36
dbinom(4,30,1/36)
dbinom(4,100,1/6)
rbinom(10,4,1/6)
rbinom(10,4,1/6) == rbinom(10,2,1/2)
dbinom(100,30,1/3)
dbinom(30,100,1/3)
pi * (sample(1:10,1)^2) * (sample(1:10,1))/3
mean(replicate(1000,pi * (sample(1:10,1)^2) * (sample(1:10,1))/3))
mean(replicate(100000,pi * (sample(1:10,1)^2) * (sample(1:10,1))/3))
setwd("C:\Users\Sekhar\Documents\Github\R-Programs")
setwd("C:/Users/Sekhar/Documents/Github/R-Programs")
source(example_4.2)
source("example_4.2.R")
source("example_4.2.R")
example_4.2()
example_4.2()
example_4.2()
example_4.2()
example_4.2()
example_4.2()
mean(replicate(10000,example_4.2))
replicate(10000,example_4.2)
replicate(10000,example_4.2())
mean(replicate(10000,example_4.2()))
mean(replicate(10000,example_4.2()))
mean(replicate(10000,example_4.2()))
mean(replicate(10000,example_4.2()))
mean(replicate(10000,example_4.2()))
mean(replicate(10000,example_4.2()))
mean(replicate(10000,example_4.2()))
source("example_4.2.R")
mean(replicate(10000,example_4.2()))
mean(replicate(10000,example_4.2()))
mean(replicate(10000,example_4.2()))
mean(replicate(10000,example_4.2()))
mean(replicate(10000,example_4.2()))
mean(replicate(10000,example_4.2()))
9/5
hist(rpois(100000,25),prob=T)
abline(v=25-2*5)
abline(v=25+2*5)
